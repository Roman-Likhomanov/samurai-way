{"version":3,"file":"static/js/797.9ba42d64.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","assets/images/photoicon.svg","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__f9mbS\",\"backgroundPhoto\":\"ProfileInfo_backgroundPhoto__WSZA5\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__HlqKZ\",\"profileAvatarBox\":\"ProfileInfo_profileAvatarBox__Ex0TZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__s457x\",\"photoButton\":\"ProfileInfo_photoButton__m+NHi\",\"profileDataBox\":\"ProfileInfo_profileDataBox__MmPpA\",\"statusBox\":\"ProfileInfo_statusBox__M6lfF\",\"profileDataForm\":\"ProfileInfo_profileDataForm__Ne2KE\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusBox}>\r\n            {!editMode &&\r\n                <div>\r\n                   <b>Status:</b><span onClick={activateEditMode}> {props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","var _circle, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPhotoicon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: 15.5,\n    fill: \"#808080\",\n    stroke: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16 18.8444C17.3746 18.8444 18.4889 17.7301 18.4889 16.3555C18.4889 14.9809 17.3746 13.8666 16 13.8666C14.6254 13.8666 13.5111 14.9809 13.5111 16.3555C13.5111 17.7301 14.6254 18.8444 16 18.8444ZM16 18.2222C17.031 18.2222 17.8667 17.3865 17.8667 16.3555C17.8667 15.3246 17.031 14.4889 16 14.4889C14.9691 14.4889 14.1334 15.3246 14.1334 16.3555C14.1334 17.3865 14.9691 18.2222 16 18.2222Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M18.9969 11.3777C18.2512 10.6923 17.5642 10.1333 15.978 10.1333C14.3917 10.1333 13.7047 10.6923 12.959 11.3777H10.4C9.36909 11.3777 8.53336 12.2135 8.53336 13.2444V19.4666C8.53336 20.4976 9.36909 21.3333 10.4 21.3333H21.6C22.631 21.3333 23.4667 20.4976 23.4667 19.4666V13.2444C23.4667 12.2135 22.631 11.3777 21.6 11.3777H18.9969ZM18.7535 12L18.6882 11.9396C18.6261 11.8822 18.566 11.8266 18.5087 11.7744C18.2747 11.5611 18.0669 11.3838 17.8429 11.2366C17.4207 10.959 16.8922 10.7555 15.978 10.7555C15.0637 10.7555 14.5352 10.959 14.113 11.2366C13.889 11.3838 13.6812 11.5611 13.4472 11.7744C13.3898 11.8267 13.3299 11.8821 13.2677 11.9396L13.2024 12H10.4C9.71273 12 9.15558 12.5571 9.15558 13.2444V19.4666C9.15558 20.1539 9.71273 20.7111 10.4 20.7111H21.6C22.2873 20.7111 22.8445 20.1539 22.8445 19.4666V13.2444C22.8445 12.5571 22.2873 12 21.6 12H18.7535Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhotoicon);\nexport default __webpack_public_path__ + \"static/media/photoicon.f44d951526acbd5ef97e2bb608a2b2f2.svg\";\nexport { ForwardRef as ReactComponent };","import {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\nimport React from 'react';\r\nimport {ProfileType} from '../../../redux/types';\r\n\r\nexport type FormDataType = {\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    aboutMe: string\r\n}\r\n\r\ntype ProfileDataFormProps = {\r\n   profile: ProfileType\r\n}\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<FormDataType,ProfileDataFormProps> & ProfileDataFormProps> = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit} className={s.profileDataForm}>\r\n\r\n        <div><button>save</button></div>\r\n        { error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<FormDataType,ProfileDataFormProps>({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {ProfileType} from '../../../redux/types';\r\nimport avatar from '../../../assets/images/avatar.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport photoicon from '../../../assets/images/photoicon.svg'\r\nimport ProfileDataForm, {FormDataType} from './ProfileDataForm';\r\nimport backgroundImg from '../../../assets/images/maldivy.jpg'\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: any) => any\r\n}\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType | null\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string | null\r\n}\r\n\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoType> = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const background = {\r\n        backgroundImage: `url(${backgroundImg})`,\r\n    }\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const selectFileHandler = () => {\r\n        inputRef && inputRef.current?.click()\r\n    }\r\n\r\n    const uploadHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            });\r\n    };\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div style={background} className={s.backgroundPhoto}></div>\r\n                <div className={s.descriptionContainer}>\r\n                    <div className={s.profileAvatarBox}>\r\n                        <img src={profile.photos.large || avatar} className={s.mainPhoto}/>\r\n                        {isOwner && <div className={s.photoButton} onClick={selectFileHandler}>\r\n                            <img src={photoicon} alt=\"photoicon\"/>\r\n                        </div>}\r\n                        <input style={{display: 'none'}}\r\n                               ref={inputRef}\r\n                               type=\"file\"\r\n                               accept=\"image/*\"\r\n                               onChange={uploadHandler}\r\n                        />\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.profileDataBox}>\r\n            <div>\r\n                <h2>{profile && profile.fullName}</h2>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile && profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile && profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {profile && profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile && profile.aboutMe}\r\n            </div>\r\n        <div>\r\n            <br></br>\r\n            <b>Contacts</b>: {profile && Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={\r\n                profile.contacts[key as keyof typeof profile.contacts]}/>\r\n        })}\r\n        </div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__kzn9Q\",\"addPost\":\"MyPosts_addPost__bwbK6\",\"posts\":\"MyPosts_posts__kJmO-\",\"addPostForm\":\"MyPosts_addPostForm__h5sqz\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__IdM4v\",\"item\":\"Post_item__sNNxS\",\"name\":\"Post_name__o2xUp\",\"message\":\"Post_message__ib5wt\",\"likes\":\"Post_likes__OLeY6\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport avatar from '../../../../assets/images/avatar.png'\r\n\r\ntype PostPropsType = {\r\n    name: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return <div>\r\n        <div className={s.item}>\r\n            <div className={s.name}>\r\n                <img src={avatar}/>\r\n                <p>{props.name}</p>\r\n            </div>\r\n            <div className={s.message}>\r\n                <p>{props.message}</p>\r\n            </div>\r\n            <div className={s.likes}>\r\n                <span>Likes:{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {PostsType} from '../../../redux/types';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {useAppSelector} from '../../../redux/redux-store';\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: (newPostText: string, name: string) => void\r\n}\r\n\r\nexport type FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n\r\n    const nameUser = useAppSelector(state => state.auth.login) as string\r\n\r\n    let postsElement = props.posts.map((p) => <Post key={p.id} name={p.name}message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let onAddPost = (formData: FormDataType) => {\r\n        props.addPost(formData.newPostText, nameUser);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <div className={s.addPost}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.addPostForm}>\r\n            <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]}/>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {RootStateType} from '../../../redux/types';\r\nimport {ProfileActionType, addPostActionCreator, addPostTC} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {ActionsType, AppStateType} from '../../../redux/redux-store';\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPostText:string, name: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>): mapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText:string, name: string)=>{\r\n            dispatch(addPostTC(newPostText, name))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from '../../redux/types';\r\n\r\ntype ProfilePropsType = {\r\n    profile: null|ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: ProfileType) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n        <MyPostsContainer\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {ProfileType, RootStateType} from '../../redux/types';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\n\r\ntype RouteParams = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    authoraizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: ProfileType) => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype ProfileContainerPropsType = RouteComponentProps<RouteParams> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType, {}> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = String(this.props.authoraizedUserId)\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileContainerPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authoraizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)","import {Redirect} from 'react-router-dom';\r\nimport React, {ComponentType} from 'react';\r\nimport {RootStateType} from '../redux/types';\r\nimport {connect} from 'react-redux';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStatePropsType) {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","style","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","background","backgroundImage","backgroundImg","inputRef","useRef","src","photos","large","avatar","current","click","photoicon","alt","display","ref","accept","target","files","length","initialValues","formData","then","Preloader","name","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","validate","required","nameUser","useAppSelector","state","auth","login","postsElement","posts","p","id","addPost","newPostText","connect","profilePage","dispatch","addPostTC","MyPosts","ProfileContainer","userId","this","match","params","String","authoraizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","isAuth","withRouter","WithAuthRedirect","mapStateToPropsForRedirect","Component","restProps","to"],"sourceRoot":""}