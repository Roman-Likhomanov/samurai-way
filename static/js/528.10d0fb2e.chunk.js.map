{"version":3,"file":"static/js/528.10d0fb2e.chunk.js","mappings":"2NACA,EAAmC,sC,4BC6CnC,EAvC4D,SAACA,GAEzD,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,4BACMF,IACE,4BACG,oCAAc,kBAAMK,cAjBV,WACrBJ,GAAY,IAgBa,cAAyCH,EAAMI,QAAU,YAG7EF,IACG,0BACI,kBAAOM,SAbA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAYmBC,WAAW,EAAMC,OAlBvC,WACvBV,GAAY,GACZH,EAAMc,aAAaV,IAgBuEO,MAAOP,UCVzG,EAf+C,SAAC,GAAqC,IAApCW,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aAC9D,OAAIC,GAKA,0BACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAKH,EAAQI,OAAOC,SACzB,SAAC,EAAD,CAAwBhB,OAAQA,EAAQU,aAAcA,UAPvD,SAACO,EAAA,EAAD,K,QCdf,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuD,mBCoBvD,EAba,SAACrB,GACV,OAAO,0BACH,iBAAKgB,UAAWC,EAAhB,WACI,gBAAKC,IAAI,iEACRlB,EAAMsB,SACP,4BACI,mCAAkBtB,EAAMuB,oB,uCCsBpCC,GAAcC,EAAAA,EAAAA,GAAiB,IAe7BC,GAAsBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,yBAA/BD,EAbsC,SAAC3B,GAChE,OACI,kBAAM6B,SAAU7B,EAAM8B,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,KAAK,cAAcC,SAAU,CAACC,EAAAA,EAAUZ,GAAca,YAAY,oBAElG,0BACI,iDAQf,EApC4C,SAACrC,GAEzC,IAAIsC,EAAetC,EAAMuC,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAiBnB,QAASmB,EAAEnB,QAASC,WAAYkB,EAAElB,YAAxCkB,EAAEC,OAQrD,OAAO,iBAAK1B,UAAWC,EAAhB,WACH,sCACA,SAACS,EAAD,CAAqBG,SANT,SAACc,GACb3C,EAAM4C,QAAQD,EAASE,iBAMvB,gBAAK7B,UAAWC,EAAhB,SACKqB,Q,SCRb,GAFyBQ,EAAAA,EAAAA,KAdH,SAACC,GACnB,MAAO,CACHR,MAAOQ,EAAMC,YAAYT,UAIR,SAACU,GACtB,MAAO,CACHL,QAAS,SAACC,GACNI,GAASC,EAAAA,EAAAA,IAAqBL,QAKjBC,CAA6CK,GCFtE,EAR4C,SAACnD,GACzC,OAAO,4BACH,SAAC,EAAD,CAAae,QAASf,EAAMe,QAASX,OAAQJ,EAAMI,OAAQU,aAAcd,EAAMc,gBAC/E,SAAC,EAAD,Q,oBCgBFsC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAoBD,OApBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAEF,WACI,IAAIC,EAASC,KAAKtD,MAAMuD,MAAMC,OAAOH,OACjCA,IACAA,EAAOI,OAAOH,KAAKtD,MAAM0D,qBAErBJ,KAAKtD,MAAM2D,QAAQC,KAAK,UAGhCN,KAAKtD,MAAM6D,WAAWR,GACtBC,KAAKtD,MAAM8D,UAAUT,KACxB,oBAED,WAEI,OAAO,0BACH,SAAC,GAAD,kBAAaC,KAAKtD,OAAlB,IAAyBe,QAASuC,KAAKtD,MAAMe,QAASX,OAAQkD,KAAKtD,MAAMI,OACzEU,aAAcwC,KAAKtD,MAAMc,sBAEhC,EApBCsC,CAAyBW,EAAAA,WA8B/B,GAAeC,EAAAA,EAAAA,KACXlB,EAAAA,EAAAA,KARkB,SAACC,GAAD,MAA6C,CAC/DhC,QAASgC,EAAMC,YAAYjC,QAC3BX,OAAQ2C,EAAMC,YAAY5C,OAC1BsD,kBAAmBX,EAAMkB,KAAKZ,OAC9Ba,OAAQnB,EAAMkB,KAAKC,UAIM,CAACL,WAAAA,EAAAA,GAAYC,UAAAA,EAAAA,GAAWhD,aAAAA,EAAAA,KACjDqD,EAAAA,GAFJ,CAGEf","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__f9mbS\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                   <b>Status:</b><span onDoubleClick={activateEditMode}> {props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {ProfileType} from '../../../redux/store';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\ntype ProfileInfoType = {\r\n    profile: null|ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoType> = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.small}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__kzn9Q\",\"posts\":\"MyPosts_posts__kJmO-\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__IdM4v\",\"item\":\"Post_item__sNNxS\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostPropsType = {\r\n    message:string\r\n    likesCount:number\r\n}\r\n\r\nconst Post = (props:PostPropsType) => {\r\n    return <div>\r\n        <div className={s.item}>\r\n            <img src=\"https://www.nicepng.com/png/full/66-661696_superman-icon.png\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {PostsType} from '../../../redux/store';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: (newPostText:string)=>void\r\n}\r\n\r\nexport type FormDataType = {\r\n    newPostText:string\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n\r\n    let postsElement = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let onAddPost = (formData: FormDataType) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n               <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder='Post message'/>\r\n           </div>\r\n           <div>\r\n               <button>Add post</button>\r\n           </div>\r\n       </form>\r\n       )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {RootStateType} from '../../../redux/store';\r\nimport {ProfileActionType, addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:(action: ProfileActionType) => void) => {\r\n    return {\r\n        addPost: (newPostText:string)=>{\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from '../../redux/store';\r\n\r\ntype ProfilePropsType = {\r\n    profile: null|ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {ProfileType, RootStateType} from '../../redux/store';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\ntype RouteParams = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: null|ProfileType\r\n    status: string\r\n    authoraizedUserId: number|null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype ProfileContainerPropsType = RouteComponentProps<RouteParams> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId=String(this.props.authoraizedUserId)\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n            updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType):MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authoraizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","src","photos","small","Preloader","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","postsElement","posts","map","p","id","formData","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","String","authoraizedUserId","history","push","getProfile","getStatus","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}